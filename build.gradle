group 'me.rozkmin'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.21'
    ext.ktor_version = '0.9.1'

    repositories {
        mavenCentral()
        maven{
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
//apply plugin: "com.github.johnrengelman.shadow"
apply from :'dependencies.gradle'



mainClassName = 'me.rozkmin.livetram.MainKt'

sourceCompatibility = 1.8

sourceSets {
    main.kotlin.srcDirs = [ 'src/main/kotlin' ]
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"

    compile rxJavaDependencies.values()
    compile retrofitDependencies.values()

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// Redeploy watcher.
run {
    args = ['run',
            "--launcher-class=$mainClassName",
            "--redeploy=src/**/*.*",
            "--on-redeploy=./gradlew classes"
    ]
}

// Naming and packaging settings for the "shadow jar".
jar {
    baseName = 'app'
    classifier = 'shadow'
    manifest.attributes(
            "Main-Class": mainClassName,
    )

    // Create fat jar, via
    // https://medium.com/@preslavrachev/kotlin-basics-create-executable-kotlin-jars-using-gradle-d17e9a8384b9
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into 'build/stage/'
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)